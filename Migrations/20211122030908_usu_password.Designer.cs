// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Worki.Data;

#nullable disable

namespace Worki.Migrations
{
    [DbContext(typeof(WorkiContext))]
    [Migration("20211122030908_usu_password")]
    partial class usu_password
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EveEventoUsuUsuario", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<int>("UsuId")
                        .HasColumnType("int");

                    b.HasKey("EveId", "UsuId");

                    b.ToTable("EveEventoUsuUsuario");
                });

            modelBuilder.Entity("GpeGustosPerfil", b =>
                {
                    b.Property<int>("GupId")
                        .HasColumnType("int")
                        .HasColumnName("gup_Id");

                    b.Property<int>("PerId")
                        .HasColumnType("int")
                        .HasColumnName("per_Id");

                    b.HasKey("GupId", "PerId")
                        .HasName("pk_gpe_gup_per");

                    b.HasIndex("PerId");

                    b.ToTable("gpe_GustosPerfil", (string)null);
                });

            modelBuilder.Entity("GruGrupoUsuUsuario", b =>
                {
                    b.Property<int>("GruId")
                        .HasColumnType("int");

                    b.Property<int>("UsuId")
                        .HasColumnType("int");

                    b.HasKey("GruId", "UsuId");

                    b.ToTable("GruGrupoUsuUsuario");
                });

            modelBuilder.Entity("GupGustosProfesionalePerPerfil", b =>
                {
                    b.Property<int>("GupId")
                        .HasColumnType("int");

                    b.Property<int>("PerId")
                        .HasColumnType("int");

                    b.HasKey("GupId", "PerId");

                    b.ToTable("GupGustosProfesionalePerPerfil");
                });

            modelBuilder.Entity("HobHobbiePerPerfil", b =>
                {
                    b.Property<int>("HobId")
                        .HasColumnType("int");

                    b.Property<int>("PerId")
                        .HasColumnType("int");

                    b.HasKey("HobId", "PerId");

                    b.ToTable("HobHobbiePerPerfil");
                });

            modelBuilder.Entity("HopHobbiesPerfil", b =>
                {
                    b.Property<int>("PerId")
                        .HasColumnType("int")
                        .HasColumnName("per_Id");

                    b.Property<int>("HobId")
                        .HasColumnType("int")
                        .HasColumnName("hob_Id");

                    b.HasKey("PerId", "HobId")
                        .HasName("pk_hop_per_hob");

                    b.HasIndex("HobId");

                    b.ToTable("hop_HobbiesPerfil", (string)null);
                });

            modelBuilder.Entity("IngInvitacionGrupo", b =>
                {
                    b.Property<int>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("GruId", "UsuId")
                        .HasName("pk_ing_gup_usu");

                    b.HasIndex("UsuId");

                    b.ToTable("ing_InvitacionGrupo", (string)null);
                });

            modelBuilder.Entity("InvInvitado", b =>
                {
                    b.Property<int>("EveId")
                        .HasColumnType("int")
                        .HasColumnName("eve_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("EveId", "UsuId")
                        .HasName("pk_inv_eve_usu");

                    b.HasIndex("UsuId");

                    b.ToTable("inv_invitado", (string)null);
                });

            modelBuilder.Entity("PosPostUsuUsuario", b =>
                {
                    b.Property<int>("PosId")
                        .HasColumnType("int");

                    b.Property<int>("UsuId")
                        .HasColumnType("int");

                    b.HasKey("PosId", "UsuId");

                    b.ToTable("PosPostUsuUsuario");
                });

            modelBuilder.Entity("VisVisto", b =>
                {
                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("PosId", "UsuId")
                        .HasName("pk_vis_pos_usu");

                    b.HasIndex("UsuId");

                    b.ToTable("vis_visto", (string)null);
                });

            modelBuilder.Entity("Worki.Data.Models.AdjAdjunto", b =>
                {
                    b.Property<int>("AdjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("adj_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdjId"), 1L, 1);

                    b.Property<string>("AdjNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("adj_Nombre");

                    b.Property<string>("AdjRutaImagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("adj_RutaImagen");

                    b.Property<int>("AdjTamano")
                        .HasColumnType("int")
                        .HasColumnName("adj_Tamano");

                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    b.HasKey("AdjId")
                        .HasName("PK__adj_adju__C4AC8F0DE03A6343");

                    b.HasIndex("PosId");

                    b.ToTable("adj_adjuntos");
                });

            modelBuilder.Entity("Worki.Data.Models.CalCalendario", b =>
                {
                    b.Property<int>("CalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cal_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalId"), 1L, 1);

                    b.Property<string>("CalDescripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("cal_Descripcion");

                    b.Property<DateTime>("CalFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("cal_Fecha");

                    b.Property<int>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.HasKey("CalId")
                        .HasName("PK__cal_Cale__1EDAD3DA8F1F087A");

                    b.HasIndex("GruId");

                    b.ToTable("cal_Calendario");
                });

            modelBuilder.Entity("Worki.Data.Models.ChgChatGrupo", b =>
                {
                    b.Property<int>("ChgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chg_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChgId"), 1L, 1);

                    b.Property<DateTime>("ChgFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("chg_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChgGifphyId")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("chg_GifphyId");

                    b.Property<string>("ChgLink")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("chg_Link");

                    b.Property<string>("ChgMensaje")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("chg_Mensaje");

                    b.Property<int>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("ChgId")
                        .HasName("PK__chg_Chat__4483AFE124504C79");

                    b.HasIndex("GruId");

                    b.HasIndex("UsuId");

                    b.ToTable("chg_ChatGrupo");
                });

            modelBuilder.Entity("Worki.Data.Models.ChuChatUsuario", b =>
                {
                    b.Property<int>("ChuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chu_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuId"), 1L, 1);

                    b.Property<bool>("ChuEsLeido")
                        .HasColumnType("bit")
                        .HasColumnName("chu_EsLeido");

                    b.Property<DateTime>("ChuFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("chu_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChuGifphyId")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("chu_GifphyId");

                    b.Property<string>("ChuLink")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("chu_Link");

                    b.Property<string>("ChuMensaje")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("chu_Mensaje");

                    b.Property<int>("UsuIdEnvia")
                        .HasColumnType("int")
                        .HasColumnName("usu_IdEnvia");

                    b.Property<int>("UsuIdRecibe")
                        .HasColumnType("int")
                        .HasColumnName("usu_IdRecibe");

                    b.HasKey("ChuId")
                        .HasName("PK__chu_Chat__4407C61B65C4046A");

                    b.HasIndex("UsuIdEnvia");

                    b.HasIndex("UsuIdRecibe");

                    b.ToTable("chu_ChatUsuario");
                });

            modelBuilder.Entity("Worki.Data.Models.ComComentario", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("com_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComId"), 1L, 1);

                    b.Property<string>("ComComentario1")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("com_Comentario");

                    b.Property<DateTime?>("ComFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("com_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    b.HasKey("ComId")
                        .HasName("PK__com_Come__506777A4748F9A67");

                    b.HasIndex("PosId");

                    b.ToTable("com_Comentario");
                });

            modelBuilder.Entity("Worki.Data.Models.ConConfiguracione", b =>
                {
                    b.Property<int>("ConId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("con_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConId"), 1L, 1);

                    b.Property<string>("ConDescripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("con_Descripcion");

                    b.Property<string>("ConNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("con_Nombre");

                    b.HasKey("ConId")
                        .HasName("PK__con_conf__08160352D880DDD9");

                    b.HasIndex(new[] { "ConDescripcion" }, "unique_con_Descripcion")
                        .IsUnique();

                    b.HasIndex(new[] { "ConNombre" }, "unique_con_Nombre")
                        .IsUnique();

                    b.ToTable("con_configuraciones");
                });

            modelBuilder.Entity("Worki.Data.Models.CopCompartir", b =>
                {
                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.Property<int>("EtiId")
                        .HasColumnType("int")
                        .HasColumnName("eti_Id");

                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    b.HasKey("UsuId")
                        .HasName("PK__cop_comp__430563048DBD25E7");

                    b.HasIndex("EtiId");

                    b.HasIndex("PosId");

                    b.ToTable("cop_compartir");
                });

            modelBuilder.Entity("Worki.Data.Models.CpeConfiguracionesPerfil", b =>
                {
                    b.Property<int>("PerId")
                        .HasColumnType("int")
                        .HasColumnName("per_Id");

                    b.Property<int>("ConId")
                        .HasColumnType("int")
                        .HasColumnName("con_Id");

                    b.Property<bool>("CpeValor")
                        .HasColumnType("bit")
                        .HasColumnName("cpe_Valor");

                    b.HasKey("PerId", "ConId")
                        .HasName("pk_pre_per_con");

                    b.HasIndex("ConId");

                    b.ToTable("cpe_ConfiguracionesPerfil");
                });

            modelBuilder.Entity("Worki.Data.Models.DenDenuncium", b =>
                {
                    b.Property<int>("DenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("den_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DenId"), 1L, 1);

                    b.Property<DateTime>("DenFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("den_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("DenId")
                        .HasName("PK__den_Denu__C8552B6EDA53D77E");

                    b.HasIndex("PosId");

                    b.HasIndex("UsuId");

                    b.ToTable("den_Denuncia");
                });

            modelBuilder.Entity("Worki.Data.Models.EmpEmpresa", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emp_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<string>("EmpNombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("emp_Nombre");

                    b.HasKey("EmpId")
                        .HasName("PK__emp_Empr__128545298C0CCA01");

                    b.ToTable("emp_Empresa");
                });

            modelBuilder.Entity("Worki.Data.Models.EncEncuestum", b =>
                {
                    b.Property<int>("EncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enc_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EncId"), 1L, 1);

                    b.Property<string>("EncNombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("enc_Nombre");

                    b.Property<int>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("EncId")
                        .HasName("PK__enc_Encu__2BFC405D349E9AE9");

                    b.HasIndex("GruId");

                    b.HasIndex("UsuId");

                    b.ToTable("enc_Encuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.EtiEtiquetum", b =>
                {
                    b.Property<int>("EtiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("eti_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtiId"), 1L, 1);

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("EtiId")
                        .HasName("PK__eti_Etiq__610D46360ED5EC02");

                    b.HasIndex("UsuId");

                    b.ToTable("eti_Etiqueta");
                });

            modelBuilder.Entity("Worki.Data.Models.EveEvento", b =>
                {
                    b.Property<int>("EveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("eve_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EveId"), 1L, 1);

                    b.Property<string>("EveDescripcion")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("eve_Descripcion");

                    b.Property<int>("EveDuracion")
                        .HasColumnType("int")
                        .HasColumnName("eve_Duracion");

                    b.Property<DateTime>("EveFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("eve_Fecha");

                    b.Property<string>("EveLugar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("eve_Lugar");

                    b.Property<string>("EveNombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("eve_Nombre");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("EveId")
                        .HasName("PK__eve_even__78B70A9113142260");

                    b.HasIndex("UsuId");

                    b.ToTable("eve_evento");
                });

            modelBuilder.Entity("Worki.Data.Models.GruGrupo", b =>
                {
                    b.Property<int>("GruId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GruId"), 1L, 1);

                    b.Property<string>("GruDescripcion")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("gru_Descripcion");

                    b.Property<string>("GruImagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("gru_Imagen");

                    b.Property<string>("GruNombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("gru_Nombre");

                    b.Property<bool>("GruPrivado")
                        .HasColumnType("bit")
                        .HasColumnName("gru_Privado");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("GruId")
                        .HasName("PK__gru_Grup__FCA16028F9FEB3AA");

                    b.HasIndex("UsuId");

                    b.ToTable("gru_Grupo");
                });

            modelBuilder.Entity("Worki.Data.Models.GupGustosProfesionale", b =>
                {
                    b.Property<int>("GupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gup_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GupId"), 1L, 1);

                    b.Property<string>("GupNombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("gup_Nombre");

                    b.HasKey("GupId")
                        .HasName("PK__gup_Gust__06A08E027F3BA663");

                    b.HasIndex(new[] { "GupNombre" }, "unique_gup_Nombre")
                        .IsUnique();

                    b.ToTable("gup_GustosProfesionales");
                });

            modelBuilder.Entity("Worki.Data.Models.HobHobbie", b =>
                {
                    b.Property<int>("HobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hob_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HobId"), 1L, 1);

                    b.Property<string>("HobNombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("hob_Nombre");

                    b.HasKey("HobId")
                        .HasName("PK__hob_Hobb__FB8321F53702A217");

                    b.HasIndex(new[] { "HobNombre" }, "unique_hob_Nombre")
                        .IsUnique();

                    b.ToTable("hob_Hobbie");
                });

            modelBuilder.Entity("Worki.Data.Models.NotNotificacion", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("not_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotId"), 1L, 1);

                    b.Property<bool>("NotEnviada")
                        .HasColumnType("bit")
                        .HasColumnName("not_Enviada");

                    b.Property<DateTime>("NotFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("not_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NotMensaje")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("not_Mensaje");

                    b.Property<string>("NotTipo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("not_Tipo");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("NotId")
                        .HasName("PK__not_Noti__0E685BD87DC3379F");

                    b.HasIndex("UsuId");

                    b.ToTable("not_Notificacion");
                });

            modelBuilder.Entity("Worki.Data.Models.OpeOpcionEncuestum", b =>
                {
                    b.Property<int>("OpeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ope_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpeId"), 1L, 1);

                    b.Property<bool>("OpeEsCorrecta")
                        .HasColumnType("bit")
                        .HasColumnName("ope_EsCorrecta");

                    b.Property<string>("OpeRespuesta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ope_Respuesta");

                    b.Property<int>("PreId")
                        .HasColumnType("int")
                        .HasColumnName("pre_Id");

                    b.HasKey("OpeId")
                        .HasName("PK__ope_Opci__73A6A6196A7B159D");

                    b.HasIndex("PreId");

                    b.ToTable("ope_OpcionEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.PerPerfil", b =>
                {
                    b.Property<int>("PerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("per_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerId"), 1L, 1);

                    b.Property<string>("PerCargo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("per_Cargo");

                    b.Property<string>("PerEstado")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("per_Estado");

                    b.Property<string>("PerImagen")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("per_Imagen");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("PerId")
                        .HasName("PK__per_Perf__32A0223F00C7B271");

                    b.HasIndex(new[] { "UsuId" }, "Unique_per_usu")
                        .IsUnique();

                    b.ToTable("per_Perfil");
                });

            modelBuilder.Entity("Worki.Data.Models.PosPost", b =>
                {
                    b.Property<int>("PosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pos_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosId"), 1L, 1);

                    b.Property<bool>("GruEsDiscusion")
                        .HasColumnType("bit")
                        .HasColumnName("gru_EsDiscusion");

                    b.Property<bool>("GruEsImportante")
                        .HasColumnType("bit")
                        .HasColumnName("gru_EsImportante");

                    b.Property<int?>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.Property<int?>("PerId")
                        .HasColumnType("int")
                        .HasColumnName("per_Id");

                    b.Property<string>("PosContenido")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("pos_Contenido");

                    b.Property<DateTime>("PosFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("pos_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PosId")
                        .HasName("PK__pos_Post__D1A5EFFA9434D01C");

                    b.HasIndex("GruId");

                    b.HasIndex("PerId");

                    b.ToTable("pos_Post");
                });

            modelBuilder.Entity("Worki.Data.Models.PrePreguntaEncuestum", b =>
                {
                    b.Property<int>("PreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pre_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreId"), 1L, 1);

                    b.Property<int>("EncId")
                        .HasColumnType("int")
                        .HasColumnName("enc_Id");

                    b.Property<int>("PreCantidadOpciones")
                        .HasColumnType("int")
                        .HasColumnName("pre_CantidadOpciones");

                    b.Property<DateTime>("PreFechaVencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("pre_FechaVencimiento");

                    b.Property<string>("PrePregunta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pre_Pregunta");

                    b.HasKey("PreId")
                        .HasName("PK__pre_Preg__E0CFC265163D94D6");

                    b.HasIndex("EncId");

                    b.ToTable("pre_PreguntaEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.ReeRespuestaEncuestum", b =>
                {
                    b.Property<int>("ReeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ree_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReeId"), 1L, 1);

                    b.Property<int>("OpeId")
                        .HasColumnType("int")
                        .HasColumnName("ope_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.HasKey("ReeId")
                        .HasName("PK__ree_Resp__8400ADFC40FA6DA5");

                    b.HasIndex("OpeId");

                    b.HasIndex("UsuId");

                    b.ToTable("ree_RespuestaEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.UsgUsuarioGrupo", b =>
                {
                    b.Property<int>("GruId")
                        .HasColumnType("int")
                        .HasColumnName("gru_Id");

                    b.Property<int>("UsuId")
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    b.Property<bool>("UsgEsAdministrador")
                        .HasColumnType("bit")
                        .HasColumnName("usg_EsAdministrador");

                    b.HasKey("GruId", "UsuId")
                        .HasName("pk_usg_gru_usu");

                    b.ToTable("usg_UsuarioGrupo");
                });

            modelBuilder.Entity("Worki.Data.Models.UsuUsuario", b =>
                {
                    b.Property<int>("UsuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usu_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuId"), 1L, 1);

                    b.Property<int>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("emp_Id");

                    b.Property<bool>("UsuAdministrador")
                        .HasColumnType("bit")
                        .HasColumnName("usu_Administrador");

                    b.Property<string>("UsuCorreo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("usu_Correo");

                    b.Property<string>("UsuNombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("usu_Nombre");

                    b.Property<string>("UsuPassword")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("usu_Password");

                    b.HasKey("UsuId")
                        .HasName("PK__usu_Usua__43056304BB8A4015");

                    b.HasIndex("EmpId");

                    b.HasIndex(new[] { "UsuCorreo" }, "unique_usu_correo")
                        .IsUnique();

                    b.ToTable("usu_Usuario");
                });

            modelBuilder.Entity("GpeGustosPerfil", b =>
                {
                    b.HasOne("Worki.Data.Models.GupGustosProfesionale", null)
                        .WithMany()
                        .HasForeignKey("GupId")
                        .IsRequired()
                        .HasConstraintName("fk_gpe_gup");

                    b.HasOne("Worki.Data.Models.PerPerfil", null)
                        .WithMany()
                        .HasForeignKey("PerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gpe_per");
                });

            modelBuilder.Entity("HopHobbiesPerfil", b =>
                {
                    b.HasOne("Worki.Data.Models.HobHobbie", null)
                        .WithMany()
                        .HasForeignKey("HobId")
                        .IsRequired()
                        .HasConstraintName("fk_hop_hob");

                    b.HasOne("Worki.Data.Models.PerPerfil", null)
                        .WithMany()
                        .HasForeignKey("PerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hop_per");
                });

            modelBuilder.Entity("IngInvitacionGrupo", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", null)
                        .WithMany()
                        .HasForeignKey("GruId")
                        .IsRequired()
                        .HasConstraintName("fk_ing_gup");

                    b.HasOne("Worki.Data.Models.UsuUsuario", null)
                        .WithMany()
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_ing_usu");
                });

            modelBuilder.Entity("InvInvitado", b =>
                {
                    b.HasOne("Worki.Data.Models.EveEvento", null)
                        .WithMany()
                        .HasForeignKey("EveId")
                        .IsRequired()
                        .HasConstraintName("fk_inv_eve");

                    b.HasOne("Worki.Data.Models.UsuUsuario", null)
                        .WithMany()
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_inv_usu");
                });

            modelBuilder.Entity("VisVisto", b =>
                {
                    b.HasOne("Worki.Data.Models.PosPost", null)
                        .WithMany()
                        .HasForeignKey("PosId")
                        .IsRequired()
                        .HasConstraintName("fk_vis_pos");

                    b.HasOne("Worki.Data.Models.UsuUsuario", null)
                        .WithMany()
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vis_usu");
                });

            modelBuilder.Entity("Worki.Data.Models.AdjAdjunto", b =>
                {
                    b.HasOne("Worki.Data.Models.PosPost", "Pos")
                        .WithMany("AdjAdjuntos")
                        .HasForeignKey("PosId")
                        .IsRequired()
                        .HasConstraintName("fk_adj_post");

                    b.Navigation("Pos");
                });

            modelBuilder.Entity("Worki.Data.Models.CalCalendario", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", "Gru")
                        .WithMany("CalCalendarios")
                        .HasForeignKey("GruId")
                        .IsRequired()
                        .HasConstraintName("fk_cal_gru");

                    b.Navigation("Gru");
                });

            modelBuilder.Entity("Worki.Data.Models.ChgChatGrupo", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", "Gru")
                        .WithMany("ChgChatGrupos")
                        .HasForeignKey("GruId")
                        .IsRequired()
                        .HasConstraintName("fk_chg_gru");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("ChgChatGrupos")
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_chg_usu");

                    b.Navigation("Gru");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.ChuChatUsuario", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "UsuIdEnviaNavigation")
                        .WithMany("ChuChatUsuarioUsuIdEnviaNavigations")
                        .HasForeignKey("UsuIdEnvia")
                        .IsRequired()
                        .HasConstraintName("fk_chu_usuEnvia");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "UsuIdRecibeNavigation")
                        .WithMany("ChuChatUsuarioUsuIdRecibeNavigations")
                        .HasForeignKey("UsuIdRecibe")
                        .IsRequired()
                        .HasConstraintName("fk_chu_usuRecibe");

                    b.Navigation("UsuIdEnviaNavigation");

                    b.Navigation("UsuIdRecibeNavigation");
                });

            modelBuilder.Entity("Worki.Data.Models.ComComentario", b =>
                {
                    b.HasOne("Worki.Data.Models.PosPost", "Pos")
                        .WithMany("ComComentarios")
                        .HasForeignKey("PosId")
                        .IsRequired()
                        .HasConstraintName("fk_com_pos");

                    b.Navigation("Pos");
                });

            modelBuilder.Entity("Worki.Data.Models.CopCompartir", b =>
                {
                    b.HasOne("Worki.Data.Models.EtiEtiquetum", "Eti")
                        .WithMany("CopCompartirs")
                        .HasForeignKey("EtiId")
                        .IsRequired()
                        .HasConstraintName("fk_cop_eti");

                    b.HasOne("Worki.Data.Models.PosPost", "Pos")
                        .WithMany("CopCompartirs")
                        .HasForeignKey("PosId")
                        .IsRequired()
                        .HasConstraintName("fk_cop_pos");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithOne("CopCompartir")
                        .HasForeignKey("Worki.Data.Models.CopCompartir", "UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cop_usu");

                    b.Navigation("Eti");

                    b.Navigation("Pos");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.CpeConfiguracionesPerfil", b =>
                {
                    b.HasOne("Worki.Data.Models.ConConfiguracione", "Con")
                        .WithMany("CpeConfiguracionesPerfils")
                        .HasForeignKey("ConId")
                        .IsRequired()
                        .HasConstraintName("fk_cpe_con");

                    b.HasOne("Worki.Data.Models.PerPerfil", "Per")
                        .WithMany("CpeConfiguracionesPerfils")
                        .HasForeignKey("PerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cpe_per");

                    b.Navigation("Con");

                    b.Navigation("Per");
                });

            modelBuilder.Entity("Worki.Data.Models.DenDenuncium", b =>
                {
                    b.HasOne("Worki.Data.Models.PosPost", "Pos")
                        .WithMany("DenDenuncia")
                        .HasForeignKey("PosId")
                        .IsRequired()
                        .HasConstraintName("fk_den_pos");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("DenDenuncia")
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_den_usu");

                    b.Navigation("Pos");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.EncEncuestum", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", "Gru")
                        .WithMany("EncEncuesta")
                        .HasForeignKey("GruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_enc_gru");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("EncEncuesta")
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_enc_usu");

                    b.Navigation("Gru");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.EtiEtiquetum", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("EtiEtiqueta")
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_eti_usu");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.EveEvento", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("EveEventos")
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_eve_usu");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.GruGrupo", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("GruGrupos")
                        .HasForeignKey("UsuId")
                        .IsRequired()
                        .HasConstraintName("fk_gru_usu");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.NotNotificacion", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("NotNotificacions")
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_not_usu");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.OpeOpcionEncuestum", b =>
                {
                    b.HasOne("Worki.Data.Models.PrePreguntaEncuestum", "Pre")
                        .WithMany("OpeOpcionEncuesta")
                        .HasForeignKey("PreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ope_pre");

                    b.Navigation("Pre");
                });

            modelBuilder.Entity("Worki.Data.Models.PerPerfil", b =>
                {
                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithOne("PerPerfil")
                        .HasForeignKey("Worki.Data.Models.PerPerfil", "UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_per_usu");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.PosPost", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", "Gru")
                        .WithMany("PosPosts")
                        .HasForeignKey("GruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_pos_gru");

                    b.HasOne("Worki.Data.Models.PerPerfil", "Per")
                        .WithMany("PosPosts")
                        .HasForeignKey("PerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_pos_per");

                    b.Navigation("Gru");

                    b.Navigation("Per");
                });

            modelBuilder.Entity("Worki.Data.Models.PrePreguntaEncuestum", b =>
                {
                    b.HasOne("Worki.Data.Models.EncEncuestum", "Enc")
                        .WithMany("PrePreguntaEncuesta")
                        .HasForeignKey("EncId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pre_enc");

                    b.Navigation("Enc");
                });

            modelBuilder.Entity("Worki.Data.Models.ReeRespuestaEncuestum", b =>
                {
                    b.HasOne("Worki.Data.Models.OpeOpcionEncuestum", "Ope")
                        .WithMany("ReeRespuestaEncuesta")
                        .HasForeignKey("OpeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ree_ope");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "Usu")
                        .WithMany("ReeRespuestaEncuesta")
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ree_usu");

                    b.Navigation("Ope");

                    b.Navigation("Usu");
                });

            modelBuilder.Entity("Worki.Data.Models.UsgUsuarioGrupo", b =>
                {
                    b.HasOne("Worki.Data.Models.GruGrupo", "Gru")
                        .WithMany("UsgUsuarioGrupos")
                        .HasForeignKey("GruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usg_gru");

                    b.HasOne("Worki.Data.Models.UsuUsuario", "GruNavigation")
                        .WithMany("UsgUsuarioGrupos")
                        .HasForeignKey("GruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usg_usu");

                    b.Navigation("Gru");

                    b.Navigation("GruNavigation");
                });

            modelBuilder.Entity("Worki.Data.Models.UsuUsuario", b =>
                {
                    b.HasOne("Worki.Data.Models.EmpEmpresa", "Emp")
                        .WithMany("UsuUsuarios")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("fk_usu_emp");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Worki.Data.Models.ConConfiguracione", b =>
                {
                    b.Navigation("CpeConfiguracionesPerfils");
                });

            modelBuilder.Entity("Worki.Data.Models.EmpEmpresa", b =>
                {
                    b.Navigation("UsuUsuarios");
                });

            modelBuilder.Entity("Worki.Data.Models.EncEncuestum", b =>
                {
                    b.Navigation("PrePreguntaEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.EtiEtiquetum", b =>
                {
                    b.Navigation("CopCompartirs");
                });

            modelBuilder.Entity("Worki.Data.Models.GruGrupo", b =>
                {
                    b.Navigation("CalCalendarios");

                    b.Navigation("ChgChatGrupos");

                    b.Navigation("EncEncuesta");

                    b.Navigation("PosPosts");

                    b.Navigation("UsgUsuarioGrupos");
                });

            modelBuilder.Entity("Worki.Data.Models.OpeOpcionEncuestum", b =>
                {
                    b.Navigation("ReeRespuestaEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.PerPerfil", b =>
                {
                    b.Navigation("CpeConfiguracionesPerfils");

                    b.Navigation("PosPosts");
                });

            modelBuilder.Entity("Worki.Data.Models.PosPost", b =>
                {
                    b.Navigation("AdjAdjuntos");

                    b.Navigation("ComComentarios");

                    b.Navigation("CopCompartirs");

                    b.Navigation("DenDenuncia");
                });

            modelBuilder.Entity("Worki.Data.Models.PrePreguntaEncuestum", b =>
                {
                    b.Navigation("OpeOpcionEncuesta");
                });

            modelBuilder.Entity("Worki.Data.Models.UsuUsuario", b =>
                {
                    b.Navigation("ChgChatGrupos");

                    b.Navigation("ChuChatUsuarioUsuIdEnviaNavigations");

                    b.Navigation("ChuChatUsuarioUsuIdRecibeNavigations");

                    b.Navigation("CopCompartir")
                        .IsRequired();

                    b.Navigation("DenDenuncia");

                    b.Navigation("EncEncuesta");

                    b.Navigation("EtiEtiqueta");

                    b.Navigation("EveEventos");

                    b.Navigation("GruGrupos");

                    b.Navigation("NotNotificacions");

                    b.Navigation("PerPerfil")
                        .IsRequired();

                    b.Navigation("ReeRespuestaEncuesta");

                    b.Navigation("UsgUsuarioGrupos");
                });
#pragma warning restore 612, 618
        }
    }
}
